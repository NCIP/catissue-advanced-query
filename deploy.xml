<?xml version ="1.0"?>
<!--Ant Script for create Build for caTissue Suite-->

<project name="Query Installation" default="deploy_app">

	<!--define require dir and Properties -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar" />
		</classpath>
	</taskdef>
	
	<property environment="env" />	
	<import file="build-properties.xml"/>
	<property name="base.dir" value="." />
	<property name="temp.dir" value="./deploytempQuery" />
	<property name="csm.dir" value="${temp.dir}/tempcsm" />
	<property name="lib.dir" value="${base.dir}/lib" />
	<property name="mysql.sql.dir" value="${base.dir}/SQL/MySql" />
	<property name="db2.sql.dir" value="${base.dir}/SQL/DB2" />
	<property name="dbupgrade.sql.dir" value="${base.dir}/SQL/DBUpgrade" />
	<property name="oracle.sql.dir" value="${base.dir}/SQL/Oracle" />
	<property name="common.sql.dir" value="${base.dir}/SQL/Common" />
	<property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect" />
	<property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver" />
	<property name="mysql.driver.string" value="org.gjt.mm.mysql.Driver" />
	<property name="db2.dialect.string" value="org.hibernate.dialect.DB2Dialect"/>
	<property name="db2.driver.string" value="com.ibm.db2.jcc.DB2Driver" />

	<property name="mysql.lib" value="mysql-connector-java-5.0.8-bin.jar" />
	
	<!-- These properties are not required so commented out -->
	<!-- 
	<property name="query.struts.config.file" value="struts-config.xml" />
	<property name="query.hibernate.config.file" value="QueryHibernate.cfg.xml" />
	<property name="query.tiles.def.file" value="tiles-defs.xml" />
	-->
	
	<property name="oracle_home" value="${env.ORACLE_HOME}"/>
	<property name="jboss.bin.run.jar" value="${jboss.home.dir}/bin/run.jar"/>
	
	 <property name ="datasource" value ="java:/query"/>
	
	<!-- Check for required properties -->
	<target name="assert">
		<if>
			<equals arg1="" arg2="${jboss.home.dir}" />
			<then>
				<fail message="The property 'jboss.home.dir' can not be empty" />
			</then>
			<else>
				<available file="${jboss.bin.run.jar}" property="isJbossValid"/>
				<if>
					<not>
						<equals arg1="true" arg2="${isJbossValid}" />
					</not>
					<then>
						<fail message="'${jboss.home.dir}' is not valid jboss home. Please set valid path for jboss server." />
					</then>				
				</if>
			</else>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.server.name}" />
			<then>
				<fail message="The property 'jboss.server.name' can not be empty" />
			</then>
		</if>

		<if>
			<or>
				<equals arg1="mysql" arg2="${database.type}" />
				<equals arg1="oracle" arg2="${database.type}" />
				<equals arg1="db2" arg2="${database.type}" />
			</or>
			<then />
			<else>
				<fail message="The value of property 'database.type' must be mysql or oracle" />
			</else>
		</if>
		
		<!-- Validation for ORACLE_HOME ,tns name and sqlldr if database is oracle-->
		<if>
		<equals arg1="oracle" arg2="${database.type}" />
			<then>				
				<available file="${oracle_home}" type="dir" property="IsOracleHomeBlank" />
				<if>
					<not>
					<equals arg1="true" arg2="${IsOracleHomeBlank}" />
					</not>	
					<then>
						<fail message="ORACLE_HOME is not set on your server. For windows set oracle_home as environment variable or in linux set in .bash_profile file." />
					</then>
				</if>
				
				<if>
					<equals arg1="" arg2="${oracle.tns.name}" />
					<then>
						<fail message="The property 'oracle.tns.name' can not be empty" />
					</then>
				</if>
				<trycatch>
					<try>
						<exec executable="tnsping" failonerror="true" >
							<arg value="${oracle.tns.name}"/>					
						</exec>
					</try>
					<catch>
						<fail message="'${oracle.tns.name}' is not a valid tns name. Please set valid tns name for property 'oracle.tns.name'." />
					</catch>
				</trycatch>					
				<trycatch>
					<try>
						<exec executable="sqlldr" failonerror="true"/>
				 	</try>
					<catch>
						<fail message="'sqlldr' file not found in path. Please make sure this file must be in path." />
					</catch>
				</trycatch>	
			</then>
		</if>				
		<if>
			<equals arg1="" arg2="${database.host}" />
			<then>
				<fail message="The property 'database.host' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.port}" />
			<then>
				<fail message="The property 'database.port' can not be empty. Default port for MySQL:3306 and for Oracle: 1521" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.name}" />
			<then>
				<fail message="The property 'database.name' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.username}" />
			<then>
				<fail message="The property 'database.username' can not be empty" />
			</then>
		</if>
		<!--<antcall target="validate_database_connection" /> -->
	</target>

	<!--Target for validation of connection parameters-->
	<target name="validate_database_connection">
		<!-- validation for database connection -->
		<trycatch>
        	<try>
        		<echo message="jdbc:mysql://${database.host}:${database.port}/${database.name}"  />
					<if>
						<equals arg1="mysql" arg2="${database.type}" />
						<then>							
							<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}">
									<transaction>select 1;</transaction>
									<transaction>commit;</transaction>
									<classpath>
									  <fileset dir="${lib.dir}">
									 	<include name="*.jar" />
									  </fileset>
									</classpath>
							</sql>							
						</then>					
						<elseif >					
							<equals arg1="oracle" arg2="${database.type}" />					
							<then>				
								<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
									<transaction>select sysdate from dual;</transaction>
									<transaction>commit;</transaction>
										<classpath>
											<fileset dir="${lib.dir}">
												<include name="*.jar" />
											</fileset>
										</classpath>
								</sql>					
							</then>					
						</elseif>
				</if>
		</try>
		<catch>
			<fail message="Connection fails.Please check the database configuration parameters like database.host,database.port,database.name etc.  " />
		</catch>
	</trycatch> 
	</target>

	<!--Extrct WAR and copy Configuration files to temp directory-->
	<target name="init">
		<echo message="Initializing installation..." />

		<unwar src="${base.dir}/query.war" dest="${temp.dir}/query" /> 
		<unjar src="${temp.dir}/query/WEB-INF/lib/DynamicExtensions.jar" dest="${temp.dir}/dynamicExtensionsjar" />
		<copy  todir="${temp.dir}/query/WEB-INF/classes" overwrite="true">
			<fileset dir="${base.dir}">
				<include name="log4j.properties"/>
			</fileset>
		</copy>
		
		<antcall target="configure_log4j" />
		

		<copy todir="${temp.dir}/query-properties" overwrite="true">
			<fileset dir="${base.dir}/query-properties" />
		</copy>
		<copy file="query-ds.xml" todir="${temp.dir}" overwrite="true" />
		<copy file="login-config.xml" todir="${temp.dir}" overwrite="true" />
		<copy file="properties-service.xml" todir="${temp.dir}" overwrite="true" />
	</target>
	
	<target name="configure_log4j">
		<replace dir="${temp.dir}/query/WEB-INF/classes" propertyfile="queryInstall.properties"> 
			<include name ="log4j.properties"/>
			<replacefilter token="@@jbosshome@@" value="${jboss.server.url}"/>
		</replace>
	</target>

	<!--Modify Configuration such as Session Timeout, Admin details and JBoss server port-->
	<target name="configure_war">
		<echo message="Modifying query Configuration File..." />

		<replace file="${temp.dir}/query/WEB-INF/web.xml">
			<replacefilter token="&lt;session-timeout>30&lt;/session-timeout>" value="&lt;session-timeout>${session.timeout}&lt;/session-timeout>" />
		</replace>
	</target>


	<!--Modify Adopter's Institution images, URL of Institution website and Contact Us, Privacy Notice, Disclaimer, Accessibility Text Files-->
	<target name="adopter_configuration">
		<echo message="Updating Site Images" />
		<copy todir="${temp.dir}/query/images" overwrite="true">
			<fileset dir="${base.dir}/images" />
		</copy>
	</target>

	<!--Modify Configuration For MySQL-->
	<target name="mysql_config">
		<echo message="Modifying query MySQL specific Configuration File..." />

		<replace dir="${temp.dir}/query-properties" propertyfile="queryInstall.properties">
			<include name="QueryHibernate.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${mysql.dialect.string}" />
		</replace>

		<replace dir="${temp.dir}" propertyfile="queryInstall.properties">
			<include name="query-ds.xml" />
			<include name="login-config.xml" />
			<replacefilter token="@@databaseurl@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@password@@" value="${database.password}" />
			<replacefilter token="@@databasedriver@@" value="${mysql.driver.string}" />
		</replace>
		<replace file="${temp.dir}/query/WEB-INF/classes/QueryHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
			<!-- Added by Baljeet -->
			<replacefilter token="@@dataSource@@" value="${datasource}"/>
		</replace>
		<replace file="${temp.dir}/query/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
			<!--Added By Baljeet-->
			<replacefilter token="@@dataSource@@" value="${datasource}"/>
		</replace>
		<replace file="${temp.dir}/dynamicExtensionsjar/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
			<!--Added By Baljeet-->
			<replacefilter token="@@dataSource@@" value="${datasource}"/>
		</replace>
	
	</target>

	<!--Modify Configuration For Oracle-->
	<target name="oracle_config">
		<echo message="Modifying query Oracle specific Configuration File..." />
		<replace dir="${temp.dir}/query-properties" propertyfile="queryInstall.properties">
			<include name="QueryHibernate.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${oracle.dialect.string}" />
		</replace>

		<!-- Configuring Data Source File-->
		<replace dir="${temp.dir}" propertyfile="queryInstall.properties">
			<include name="query-ds.xml" />
			<include name="login-config.xml" />
			<replacefilter token="@@databaseurl@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@password@@" value="${database.password}" />
			<replacefilter token="@@databasedriver@@" value="${oracle.driver.string}" />
		</replace>
		<replace file="${temp.dir}/query/WEB-INF/classes/QueryHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
		</replace>
		
		<replace file="${temp.dir}/query/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensions/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensionsjar/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
	

	</target>
	<!--Server clean-up-->
	
	<target name="clean_server" description="deletes the WAR file and cache from server ">
		<delete file="${jboss.server.url}/deploy/query.war" />
		<delete file="${jboss.server.url}/deploy/dynamicExtensions.war" />
		<mkdir dir="${jboss.server.url}/work"/>
		<mkdir dir="${jboss.server.url}/tmp"/>
		<delete includeemptydirs="true">
			<fileset dir="${jboss.server.url}/work">
				<include name="**/*" />
			</fileset>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${jboss.server.url}/tmp">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<!--Buid New WAR File-->
	<target name="build_war">
		<echo message="Creating New Web Application Archieve File..." />
		<delete file="${temp.dir}/query.war" />
		<delete file="${temp.dir}/dynamicExtensions.war" />
		<delete file="${temp.dir}/dynamicExtensions.jar" />
		<delete file="${base.dir}/MANIFEST.MF"/>
		
		<manifest file="${base.dir}/MANIFEST.MF"> 	
	        <attribute name="Built-By" value="${user.name}"/>
	     	<attribute name="Version" value="${application.name} ${application.version}"/>
	     	<attribute name="CSM-Version" value="${csm.version}"/>
	     	<attribute name="caCore-Version" value="${cacore.version}"/>
	     	<attribute name="Build-on" value="${TODAY}"/>
	    </manifest>	
		<jar destfile="${temp.dir}/dynamicExtensions.jar" basedir="${temp.dir}/dynamicExtensionsjar" />
				
		<copy file="${temp.dir}/dynamicExtensions.jar" todir="${temp.dir}/query/WEB-INF/lib" overwrite="true" />
		
		<antcall target="copydeletedjars">
			<param name="delPath" value="${temp.dir}/query/WEB-INF/lib"/>
		</antcall>

		<war destfile="${temp.dir}/query.war" 
			webxml="${temp.dir}/query/WEB-INF/web.xml" manifest="${base.dir}/MANIFEST.MF">
			<fileset dir="${temp.dir}/query">
				<exclude name="**/*build*" />
				<exclude name="**/*WEB-INF*" />
				<exclude name="**/*servlet.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/WEB-INF/lib/log4j-1.2.9.jar*" />
				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/.*" />
				<exclude name="**/*.sql" />
				<exclude name="**/CVS*" />
				<exclude name="**/jta.jar" />	
			</fileset>
		</war>

		<copy file="${temp.dir}/query/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/dynamicExtensions/WEB-INF/classes" overwrite="true" />
		
	</target>

	
	<target name="copydeletedjars">
	<delete >  

		<fileset dir="${delPath}">
			<include name="backport-util-concurrent-3.0.jar" /> 
			<include name="c3p0-0.8.4.5.jar" />
			<include name="c3p0-0.8.5.2.jar" /> 
			<include name="castor-1.0.2.jar" /> 
			<include name="cglib-2.1.jar" /> 
			<include name="commons-collections-2.1.1.jar" />
			<include name="commons-collections-3.1.jar" /> 
			<include name="commons-discovery-0.2.jar" /> 
			<include name="commons-fileupload.jar" /> 
			<include name="commons-lang-2.1.jar" /> 
			<include name="commons-logging-1.0.4.jar" /> 
			<include name="dom4*.jar" /> 
			<include name="ehcache-1.1.jar" />
			<include name="ehcache-1.2.2.jar" /> 
			<include name="freemarker.jar" /> 
			<include name="jakarta-oro.jar" /> 
			<include name="uml-1.3.jar" /> 
			<include name="wsdl4j-1.5.1.jar" /> 
			<include name="xalan-2.4.0.jar" /> 
			<include name="p6spy.jar" /> 
			<include name="sdkClient.jar" /> 
			<include name="uuid-key-generator.jar" /> 
			<include name="wsdl4j.jar" /> 
			<include name="j2ee.jar" /> 
			<include name="caGrid-1.0-caDSR-client.jar" /> 
			<include name="caGrid-1.0-caDSR-common.jar" /> 
			<include name="caGrid-1.0-caDSR-stubs.jar" /> 
			<include name="caGrid-1.0-core.jar" /> 
			<include name="caGrid-1.0-data-common.jar" /> 
			<include name="caGrid-1.0-data-stubs.jar" /> 
			<include name="caGrid-1.0-data-utils.jar" /> 
			<include name="caGrid-1.0-fqp-client.jar" /> 
			<include name="caGrid-1.0-fqp-common.jar" /> 
			<include name="caGrid-1.0-fqp-stubs.jar" /> 
			<include name="caGrid-1.0-metadata-common.jar" /> 
			<include name="caGrid-1.0-metadata-security.jar" /> 
			<include name="caGrid-1.0-sdkQuery.jar" /> 
			<include name="caGrid-1.0-ServiceSecurityProvider-client.jar" /> 
			<include name="caGrid-1.0-ServiceSecurityProvider-common.jar" /> 
			<include name="jboss-common-jdbc-wrapper.jar"/>
			<include name="mysql-connector-java-3.1.13-bin.jar"/>
			<include name="oracleDriver.jar"/>
			<include name="boot.jar" /> 
			<include name="c3p0-0.9.0.jar" /> 
			<include name="query-client.jar" /> 
			<include name="experiment-client.jar" /> 
			<!-- include name="jboss-client.jar" /--> 
			<include name="junit-3.8.1.jar" /> 
			<include name="mockobjects-core-0.09.jar" /> 
			<include name="mysql-connector-java-5.0.8-bin.jar" /> 
			<include name="openide-util.jar" /> 
			<include name="acrobat-core.jar" />
		</fileset>		

	</delete>
</target>
	<!--Copy WAR and Configuration Files to JBOSS Directory-->
	<target name="copy_files">
		<echo message="Copying query Application Components..." />

		<copy todir="${jboss.server.url}/query-properties" overwrite="true">
			<fileset dir="${temp.dir}/query-properties">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${jboss.server.url}/deploy" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="query.war" />
				<include name="query-ds.xml" />
				<!--include name="dynamicExtensions.war" /-->
			</fileset>
		</copy>
		<replace dir="${jboss.server.url}/query-properties">
			<include name="ApplicationSecurityConfig.xml" />
			<replacefilter token="@@hibernate-config-file@@" value="${jboss.server.url}/query-properties/QueryHibernate.cfg.xml" />
		</replace>
		<copy todir="${jboss.server.url}/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="${mysql.lib}" />
			</fileset>
		</copy>
		<delete file="${jboss.server.url}/lib/oracleDriver.jar" casesensitive="false"/>
	</target>
	
	<!--Target call for both fresh deployment and database creation-->
	<target name="deploy_all">
		<antcall target="deploy_app" />
		<antcall target="deploy_db" />
		<antcall target="server_security" />
	</target>
	
	<!--Target for checking server security -->
		<target name="server_security">
			<copy file="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/web.xml"
						tofile="${temp.dir}/web.xml" >
			</copy>
				<concat destfile="${temp.dir}/web1.xml" > 
					<filelist dir="${temp.dir}" files="web.xml"/>
						<filterchain>
							<headfilter lines="83"/>
						</filterchain>
				</concat>
				<concat destfile="${temp.dir}/web2.xml" > 
					<filelist dir="${temp.dir}" files="web.xml"/>
						<filterchain>
							<headfilter lines="27" skip="83"/>
								<tokenfilter>
								 	<replacestring from="-->" to=""/>
								</tokenfilter>
								<tokenfilter>
								 	<replacestring from="console." to="console.-->"/>
								</tokenfilter> 		 		 	
						</filterchain>
			     </concat>
				 <concat destfile="${temp.dir}/web1.xml" append="true"> 
					 <filelist dir="${temp.dir}" files="web2.xml"/>
				 </concat>
			<copy file="${temp.dir}/web1.xml" tofile="${temp.dir}/web.xml" overwrite="true"/>
			<copy file="${temp.dir}/web.xml" 
						tofile="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/web.xml" overwrite="true"/>
					
			<copy file="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/jboss-web.xml"
						tofile="${temp.dir}/jboss-web.xml" >
			</copy>
				<concat destfile="${temp.dir}/web3.xml" > 
					<filelist dir="${temp.dir}" files="jboss-web.xml"/>
						<filterchain>
							<headfilter lines="7" />
								<tokenfilter>
									<replacestring from="-->" to=""/>
								</tokenfilter>
								<tokenfilter>
									<replacestring from="users." to="users.-->"/>
								</tokenfilter> 		 		 	
						</filterchain>
				</concat>
			<copy file="${temp.dir}/web3.xml" tofile="${temp.dir}/jboss-web.xml" overwrite="true"/>
			<copy file="${temp.dir}/jboss-web.xml" 
						tofile="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/jboss-web.xml" overwrite="true"/>			
		</target>
	
		<!--Target for fresh deployment of caTissue application-->
	<target name="deploy_app">
		<antcall target="clean_server" />
		<antcall target="assert" />
		<delete dir="${temp.dir}" />
		<antcall target="init" />
		<antcall target="configure_war" />
		<!--<antcall target="adopter_configuration" /> -->
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="mysql_config" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="oracle_config" />
					
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" />
				<then>
					<antcall target="db2_config" />
				</then>
			</elseif>								
		</if>
		
		<antcall target="build_war" />
		<antcall target="copy_files" />
		<antcall target="send_mail" />
		<antcall target="config_jboss_files" />
		
		<!-- delete dir="${temp.dir}" / --> 
	</target>
	
	<!--Target for deployment with jboss config-->
	<target name="config_jboss_files">
		<copy todir="${jboss.server.url}/conf" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="login-config.xml" />
			</fileset>
		</copy>

		<replace dir="${temp.dir}">
			<include name="properties-service.xml" />
			<replacefilter token="@@app-security-file@@" value="${jboss.server.url}/query-properties/ApplicationSecurityConfig.xml" />
			<replacefilter token="@@app-properties-file@@" value="${jboss.server.url}/query-properties/query_Properties.xml" />
			<replacefilter token="@@app-dynamicuixml-file@@" value="${jboss.server.url}/query-properties/dynamicUI.xml" />
		</replace>

		<copy todir="${jboss.server.url}/deploy" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="properties-service.xml" />
			</fileset>
		</copy>
		<delete file="${jboss.server.url}/lib/hibernate2.jar" />
	</target>
	
	<!--Target for Database Creation-->
	<target name="deploy_db">		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="deploy_db_mysql" />
				
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="deploy_db_oracle" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" />
				<then>
					<antcall target="deploy_db_db2" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
				
	</target>
	
	<!--DB2 Database Creation -->
	<target name="deploy_db_db2">
		<echo message="Initializing DB2 Database for caTissue Suite v1.1 Application..." />
		<sql driver="${db2.driver.string}" url="jdbc:db2://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${db2.sql.dir}/query/csm_query.sql" />
			<transaction src="${db2.sql.dir}/query/DynamicExtension_DB2.sql" /> 
			<transaction src="${db2.sql.dir}/query/metadata_schema_script.sql" /> 
			<transaction src="${db2.sql.dir}/query/query_schema_script.sql" />
			<transaction src="${db2.sql.dir}/query/caB2B Table Generation Script.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<!--MySQL Database Creation -->
	<target name="deploy_db_mysql">
		<echo message="Initializing MySQL Database for caTissue Suite v1.1 Application..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}">
			<!--<transaction src="${mysql.sql.dir}/query.sql" /> -->
			<!--<transaction src="${mysql.sql.dir}/InitDB_CreateTable.sql" /> -->
			<!--<transaction src="${common.sql.dir}/initDB_Insert_Common.sql" /> -->
			<!--<transaction src="${common.sql.dir}/AlterTable.sql" /> -->
			<!--<transaction src="${common.sql.dir}/CDE_DummyData_Common.sql" /> -->
			<!--<transaction src="${mysql.sql.dir}/csm_query.sql" />-->
			<!--<transaction src="${common.sql.dir}/insert_default_data.sql" /> -->
			<!--<transaction src="${common.sql.dir}/indexes.sql" /> -->
			<!--<transaction src="${mysql.sql.dir}/dynamicextension.sql" />-->
			<!--<transaction src="${mysql.sql.dir}/query/metadata_schema_script.sql" />--> 
			<!--<transaction src="${mysql.sql.dir}/query/query_schema_script.sql" />-->
			<!--<transaction src="${mysql.sql.dir}/query/caB2B Table Generation Script.sql" />-->
			<!-- <transaction src="${mysql.sql.dir}/query/csm.sql" />-->
			<transaction src="${mysql.sql.dir}/query/initDb.sql" />

			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<!--<antcall target="temp_update_metadata_for_clob_support_mysql" /> -->
		<!--<antcall target="insert_entity_group_metadata_mysql" /> -->
		<!--<antcall target="upgrade_db_demodel_mysql" /> -->
		<!--<antcall target="update_metadata_for_model_changes" /> -->
	</target>
	
	<target name="insert_entity_group_metadata_mysql">
		<echo message="Inserting entity group metadata for Mysql" />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}">
			<transaction src="${mysql.sql.dir}/query/entity_group_metadata.sql" /> 
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	<target name="insert_entity_group_metadata_oracle">
		<echo message="Inserting entity group metadata for Oracle" />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/entity_group_metadata.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	<target name="temp_update_metadata_for_clob_support_mysql">
		<echo message="Upgrading MySQL Database for supporting query on clob type attributes..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}">
			<transaction src="${mysql.sql.dir}/query/temp_update_metadata.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<target name="temp_update_metadata_for_clob_support_oracle">
		<echo message="Upgrading Oracle Database for supporting query on clob type attributes..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/temp_update_metadata.sql" />
			<transaction>commit;</transaction>
			<classpath>
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
			</classpath>
		</sql>
		</target>
	
	<!--Oracle Database Creation -->
	<target name="deploy_db_oracle">
		<echo message="Initializing Oracle Database for caTissue Suite v1.1 Application..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query.sql" />
			<transaction src="${oracle.sql.dir}/InitDB_CreateTable.sql" />
			<transaction src="${common.sql.dir}/initDB_Insert_Common.sql" />
			<transaction src="${oracle.sql.dir}/AlterTable.sql" />
			<transaction src="${common.sql.dir}/CDE_DummyData_Common.sql" />
			<transaction src="${oracle.sql.dir}/CSM_Create_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/insert_default_data.sql" />
			<transaction src="${common.sql.dir}/indexes.sql" />
			<transaction src="${oracle.sql.dir}/dynamicextension.sql" />
			<transaction src="${oracle.sql.dir}/query/caB2B Table Generation Script.sql" />
			<transaction src="${oracle.sql.dir}/query/metadata_schema_script.sql" /> 
			<transaction src="${oracle.sql.dir}/query/query_schema_script.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>

		<antcall target="insertQueryMetadata" />   

		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle" delimiter="/" delimitertype="row">
			<transaction src="${oracle.sql.dir}/CSM_Trigger_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/DBUtility.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/CSM_InsertData_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/CSM_AddConstraints_Oracle.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<antcall target="temp_update_metadata_for_clob_support_oracle" />
		<antcall target="insert_entity_group_metadata_oracle" />
		<antcall target="upgrade_db_demodel_oracle" />
		<antcall target="update_metadata_for_model_changes" />
		<antcall target="alter_CA_model_Tables" />	
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/dropDESequence.SQL" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/resetDESequence.SQL" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>	
	
	</target>

	<target name="insertQueryMetadata">
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction  src="${dbupgrade.sql.dir}/Oracle/CAModel.sql"/>
			<transaction src="${oracle.sql.dir}/query/DisableConstraints.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>	
		
		<delete includeemptydirs="true">
			<fileset dir="${dbupgrade.sql.dir}/Oracle/CAModelCTLs">
				<include name="**/*" />
			</fileset>
		</delete>
		
		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">	
			<transaction src="${oracle.sql.dir}/query/enableCons.sql" />
			<transaction src="${oracle.sql.dir}/query/UpdateTable.sql" />
			<!-- <transaction src="${oracle.sql.dir}/query/csm_oracle.sql" /> -->
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction>
			DROP SEQUENCE DE_ATTR_REC_SEQ ;                              
			DROP SEQUENCE DE_COLL_ATTR_REC_VALUES_SEQ ;        
			DROP SEQUENCE DE_FILE_ATTR_REC_VALUES_SEQ ;        
			DROP SEQUENCE DE_OBJECT_ATTR_REC_VALUES_SEQ ;      
			DROP SEQUENCE DYEXTN_ABSTRACT_METADATA_SEQ ;        
			DROP SEQUENCE DYEXTN_ASSO_DISPLAY_ATTR_SEQ ;       
			DROP SEQUENCE DYEXTN_ATTRIBUTE_TYPE_INFO_SEQ ;     
			DROP SEQUENCE DYEXTN_CONTAINER_SEQ ;               
			DROP SEQUENCE DYEXTN_CONTROL_SEQ ;                 
			DROP SEQUENCE DYEXTN_DATABASE_PROPERTIES_SEQ ;     
			DROP SEQUENCE DYEXTN_DATA_ELEMENT_SEQ ;            
			DROP SEQUENCE DYEXTN_ENTITY_MAP_CONDN_SEQ ;        
			DROP SEQUENCE DYEXTN_ENTITY_MAP_SEQ ;              
			DROP SEQUENCE DYEXTN_ENTITY_RECORD_SEQ ;           
			DROP SEQUENCE DYEXTN_FILE_EXTN_SEQ ;               
			DROP SEQUENCE DYEXTN_FORM_CONTEXT_SEQ ;            
			DROP SEQUENCE DYEXTN_PERMISSIBLEVAL_SEQ ;          
			DROP SEQUENCE DYEXTN_ROLE_SEQ ;                    
			DROP SEQUENCE DYEXTN_RULE_PARAMETER_SEQ ;          
			DROP SEQUENCE DYEXTN_RULE_SEQ ;                                   
			DROP SEQUENCE DYEXTN_SEMANTIC_PROPERTY_SEQ ;        
			DROP SEQUENCE DYEXTN_TAGGED_VALUE_SEQ ;            
			DROP SEQUENCE DYEXTN_VALUE_DOMAIN_SEQ ;            
			DROP SEQUENCE DYEXTN_VIEW_SEQ ;
			</transaction>
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${oracle.sql.dir}/query/createDESequence.SQL" />
		</sql>
	</target>
	

	<!-- DE Metadata Upgradation -->
	<target name="update_metadata_for_model_changes">
		<unwar src="${base.dir}/query.war" dest="${temp.dir}/query"/>
		<delete file="${temp.dir}/query/WEB-INF/lib/mmtxProject.jar" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="update_metadata_for_model_changes_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="update_metadata_for_model_changes_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<delete dir="${temp.dir}" />
	</target>
	
	<target name="update_metadata_for_model_changes_mysql">
		<echo message="Updating DE Metadata for model changes (mysql)....." />
		<java classname="edu.wustl.query.querysuite.metadata.UpdateMetadata"  fork="true" maxmemory="512m">
			<classpath location="${temp.dir}/query/WEB-INF/classes" />
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${mysql.driver.string}"/>
		</java>
	</target>
		
	<target name="update_metadata_for_model_changes_oracle">
		<echo message="Updating DE Metadata for model changes (oracle)....." />
		<java classname="edu.wustl.query.querysuite.metadata.UpdateMetadata"  fork="true" maxmemory="512m">
			<classpath location="${temp.dir}/query/WEB-INF/classes" />
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${oracle.driver.string}"/>
		</java>
	</target>
		
	<target name="metadata_cleanup" description="To remove the corrupted path from the database.">
			<echo message="Cleaning up Corrupted paths...." />
			<delete dir="${temp.dir}" failonerror="false"/>
	 		<mkdir dir="${temp.dir}" />
			<unwar src="${base.dir}/query.war" dest="${temp.dir}/query"/>
			<delete file="${temp.dir}/query/WEB-INF/lib/mmtxProject.jar" />
			<if>
				<equals arg1="mysql" arg2="${database.type}" />
				<then>
					<java classname="edu.wustl.common.util.global.QueryMetadataCleanup" fork="true">
						<classpath refid="temp.classpath" />
						<arg value="${database.username}"/>
						<arg value="${database.password}"/>
						<arg value="${mysql.driver.string}"/>
						<arg value="jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
					</java>
				</then>
				<elseif>
					<equals arg1="oracle" arg2="${database.type}" />
					<then>
						<java classname="edu.wustl.common.util.global.QueryMetadataCleanup" fork="true">
							<classpath refid="temp.classpath" />
							<arg value="${database.username}"/>
							<arg value="${database.password}"/>
							<arg value="${oracle.driver.string}"/>
							<arg value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
						</java>
					</then>
				</elseif>
				<else>
					<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
				</else>
			</if>
			<delete dir="${temp.dir}" />
	</target>
	
	<!--Send mail to user-->
	<target name="send_mail">
	    <condition property="protocol" value="https" else="http">
			<equals arg1="${jboss.container.secure}" arg2="yes" />
		</condition>
		<condition property="jbossServerHost" value="localhost" else="${jboss.server.host}">
			<equals arg1="${jboss.server.host}" arg2="" />
		</condition>
		<echo message="jboss.container.secure property is set to: ${jboss.container.secure} protocol set to: ${protocol}" />
		<echo message="Sending mail to: ${email.administrative.emailAddress}" />
		<echo message="Sending mail from: ${email.sendEmailFrom.emailAddress}" />
		<mail mailhost="${email.mailServer}" subject="caTissueSuite v1.1 Successfully Deployed" encoding="plain" failonerror="false">
			<from address="${email.sendEmailFrom.emailAddress}" />
			<to address="${email.administrative.emailAddress}" />
			<message>
Dear caTissueSuite Administrator,
	
	This is to validate that caTissueSuite application has been installed at 
the following location: ${jboss.home.dir}		
    
	To complete the deployment, you have to now perform the post installation 
steps described in section "Post Installation Configuration" in the deployment 
guide (caTissueSuite v1.1 Deployment Guide.doc). 

	Once you have completed deployment, you should be able to login with the following 
details:			
URL: ${protocol}://${jbossServerHost}:${jboss.server.port}/query 
Username:${first.admin.emailAddress}
Password:${first.admin.password}

Thanking You,
-caTissue Suite				
			</message>
		</mail>
		<echo>
			Please check the Email of ${first.admin.emailAddress}.
			If the Deployment mail is not received please check your 
			email.administrative.emailAddress and email.sendEmailFrom.emailAddress 
			properties in queryInstall.properties and Re-deploy the Application.
		</echo>
	</target>

	<!--First User Creation. Mandar : 02-May-2006 -->
	<path id="temp.classpath">
		<fileset dir="${temp.dir}/query/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
	</path>


	<property name="filename" value="" />
	<property name="hookentity" value="" />
	<property name="mainContainerList" value="" />
	<property name="condition" value="" />
	<property name="package" value="" />

	<target name="import_xmi">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${temp.dir}/query">
				<include name="**/*" />
			</fileset>
		</delete>

		<unwar src="${base.dir}/query.war" dest="${temp.dir}/query" />

		<copy file="${base.dir}/DE_conf/QueryHibernate.cfg.xml" todir="${temp.dir}/query/WEB-INF/classes" overwrite="true" />
		<copy file="${base.dir}/DE_conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/query/WEB-INF/classes" overwrite="true" />

		<echo>Configuring logger ...</echo>
		<!--<antcall target="configure_log4j" /> -->
		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<replace dir="${temp.dir}/query/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}" />
					<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver" />
					<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/query/WEB-INF/classes">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}" />
						<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}" />
						<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/query/WEB-INF/classes">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${db2.dialect.string}" />
						<replacefilter token="@@DRIVER@@" value="${db2.driver.string}" />
						<replacefilter token="@@URL@@" value="jdbc:db2://${database.host}:${database.port}/${database.name}" />
					</replace>
				</then>
			</elseif>
		</if>
		<echo>Replacing ...</echo>
		<replace dir="${temp.dir}/query/WEB-INF/classes">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}" />
			<replacefilter token="@@DATABASE_PASSWORD@@" value="${database.password}" />
		</replace>

		<echo>Importing</echo>
		<java classname="edu.wustl.query.annotations.xmi.ImportXmi" fork="true">
			<arg value="${filename}" />
			<arg value="${hookentity}" />
			<arg value="${mainContainerList}" />
			<arg value="${package}" />
			<arg value="${condition}" />
			
			<classpath>
				<pathelement location="${temp.dir}/query/WEB-INF/classes" />
				<!--fileset dir="${temp.dir}/query/WEB-INF/lib">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset -->
				<fileset dir="${lib.dir}">
						<include name="*.jar" /> 
					   <!--exclude name="commonpackage.jar" />
					   <exclude name="washu-commons.jar" /-->
					   <exclude name="uml-1.3.jar" />
				</fileset>  	
				
				<fileset dir="${jboss.server.url}/lib">
						<include name="jboss-j2ee.jar" /> 
				</fileset>  	
				
			</classpath>
		</java>

		<!--delete includeemptydirs="true">
			<fileset dir="${temp.dir}/query">
				<include name="**/*" />
			</fileset>
		</delete --> 
	</target>

	<target name="db2_config">
		<echo message="Modifying query DB2 specific Configuration File..." />
		<replace dir="${temp.dir}/query-properties" propertyfile="queryInstall.properties">
			<include name="QueryHibernate.cfg.xml" />
			<replacefilter token="${mysql.dialect.string}" value="${db2.dialect.string}" />
		</replace>

		<!-- Configuring Data Source File-->
		<replace dir="${temp.dir}" propertyfile="queryInstall.properties">
			<include name="query-ds.xml" />
			<include name="login-config.xml" />
			<replacefilter token="@@databaseurl@@" value="jdbc:db2://${database.host}:${database.port}/${database.name}"/>
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@password@@" value="${database.password}" />
			<replacefilter token="@@databasedriver@@" value="${db2.driver.string}" />
		</replace>
		<replace file="${temp.dir}/query/WEB-INF/classes/QueryHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${db2.dialect.string}" />
		</replace>
		
		<replace file="${temp.dir}/query/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${db2.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensions/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${db2.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensionsjar/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${db2.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
	</target>
	
	<target name="upgrade_db_demodel" >
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_demodel_mysql" />
			</then>
		<elseif>
			<equals arg1="oracle" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_demodel_oracle" />
			</then>
		</elseif>
		<elseif>
			<equals arg1="db2" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_demodel_db2" />
			</then>
		</elseif>
		<else>
			<echo message="DATABASE UPGRADATION FOR DYNAMIC EXTENSIONS FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
		</else>
		</if>
	</target>
			<!--MySQL Database Upgradation -->
	<target name="upgrade_db_demodel_mysql">
		<echo message="Upgrading MySQL Database for DE model Application ..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" >
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/dropdeconstraints.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/createnewtable.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/alterqueries.sql" /> 
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/addconstraints.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<!--Oracle Database Upgradation -->
	<target name="upgrade_db_demodel_oracle">
		<echo message="Upgrading Oracle Database for DE model Application ..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" rdbms="oracle">
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/dropdeconstraints.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/createnewtable.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/alterqueries.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/addconstraints.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/addsequence.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
				
</project>
